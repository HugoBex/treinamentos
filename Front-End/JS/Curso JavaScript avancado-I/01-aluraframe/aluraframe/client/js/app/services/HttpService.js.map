{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handlerError","res","json","dado","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;wCAELC,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,yBADH,EAEFF,IAFE,CAEG;AAAA,mCAAOE,IAAIC,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIL,G,EAAKM,I,EAAM;AAAA;;AACZ,+BAAOL,MAAMD,GAAN,EAAW;AACVO,qCAAS,EAAE,gBAAgB,kBAAlB,EADC;AAEVC,oCAAQ,MAFE;AAGVC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHI,yBAAX,EAKFJ,IALE,CAKG;AAAA,mCAAO,OAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,yBALH,CAAP;AAMH;;;kDAEaA,G,EAAK;AACf,4BAAI,CAACA,IAAIQ,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUT,IAAIU,UAAd,CAAN;AACb,+BAAOV,GAAP;AACH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    get(url) {\n        return fetch(url)\n            .then(res => this._handlerError(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado) {\n        return fetch(url, {\n                headers: { 'Content-type': \"application/json\" },\n                method: 'post',\n                body: JSON.stringify(dado)\n            })\n            .then(res => this._handlerError(res));\n    }\n\n    _handlerError(res) {\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n}"]}